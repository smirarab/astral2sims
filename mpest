#!/bin/bash
set -x

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

outdir=`dirname $2`
out=`basename $2`
fn=$out


inn=`mktemp`
sed -e "s/\([(,]\)\([0-9][^:]*\):/\1jn2Ld9X_\2:/g" $1 > $inn
arb_resolve_polytomies.py $inn
reroot.py $inn.resolved jn2Ld9X_0
nw_topology -I $inn.resolved.rooted > $inn
in=`basename $inn`
rm $inn.resolved.rooted $inn.resolved

cd $outdir
ln -s $inn .

REP=1
test $# -gt 3 && REP=$3
echo "$REP runs of MP-EST will be performed"

if [ -s $out ]; then
  echo "Final results file $out is already generated. Terminating without rerunning MP-EST."
  exit 0;
fi

for x in `seq 1 $REP`; do
  grep "tree mpest" $fn.tre.mpest.$x
  test $? == 0 || break
done

grep "tree mpest" $fn.tre.mpest.$x

if [ $? != 0 ]; then

  echo "`expr $x - 1` runs are already done. Starting from run $x ..."

  species=$( cat $in|sed -e "s/:[0-9.e-]*//g" -e "s/)[0-9.e-]*/)/g" -e "s/[(,);]/ /g" -e "s/ /\n/g"|sort|uniq|tail -n+2|sed -e "s/^\(.*\)$/\1 1 \1/g" )
  sc=`echo "$species"|wc -l`
  genes=`cat $in|wc -l`
  for x in `seq $x $REP`; do
   echo "run $x of MPEST"
   tmp=`mktemp "control-$fn-$x-XXXXX"`
   echo "$in
0
`expr $RANDOM$RANDOM % 10000000`
$genes $sc 
$species
0
"> $tmp

   /usr/bin/time -p -o $out.time $DIR/bin/mpest $tmp 1>$fn.$x.mpest.out

   test $? == 1 || exit 1

   mv $fn.tre $fn.tre.mpest.$x
   grep "tree mpest" $fn.tre.mpest.$x
   test $? == 0 || exit 1
  done

else
  echo "All $x runs already finished. No more runs needed."
fi

bestrep=`grep -H "tree mpest" $fn.tre.mpest.*|sed -e "s/ .*\[/ /g" -e "s/\].*//g"|sort -n -k 2|tail -n1|sed -e "s/:.*//g"`
echo $bestrep
test -s $bestrep || exit 1
ln -fs $bestrep $fn.tre.best.mpest

python -c '
import os
import sys
import dendropy
 
src_fpath = os.path.expanduser(os.path.expandvars("'$fn.tre.best.mpest'"))
if not os.path.exists(src_fpath):
    sys.stderr.write("Not found: %s" % src_fpath) 
    sys.exit(1)     
 
dest_fpath = os.path.expanduser("'$fn.best.of.$REP.tre'")

trees = dendropy.TreeList.get_from_path(src_fpath, "nexus")
trees[-1].write_to_path(dest_fpath, "newick",write_rooting=False)'
test $? == 0 || exit 1

mv $fn.best.of.$REP.tre $out

sed -i -e "s/jn2Ld9X_//g" $out
tar cvfj logs.$fn.tar.bz --remove-files control-$fn-* $fn.tre.mpest.* $fn.*.mpest.out $fn.tre.best.mpest

exit 0
